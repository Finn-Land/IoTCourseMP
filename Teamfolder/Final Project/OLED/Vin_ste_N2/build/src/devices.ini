; This is a configuration file for devices
; author ulno
; 
; Defines aliases, includes, dependencies, 
;   and extra code for initilization
;
;
; For the following device dev_name generate code:
; [dev_name]
; aliases = dev01 dev02
; filename = dev-file (if not defined same as dev_name - else will add dev_ to prefix and .h and .cpp to end)
; depends = other-device01 other-device02 ...
; lib = <platformio-libs to include>
; lib_esp32 = <special ib for esp32 boards>
; ; class = Overwrite_Class_Name
; extra_code = 
;   /* just a comment showing extra code */
; 
; ; code = 
; ;   /* overwrite everything between include and endif */
;
; generate this code:
; // Begin: dev_name
; #define IOTEMPOWER_COMMAND_DEV_NAME
; #include <dev-include.h>
; /* just a comment showing extra code */
; #define dev_name_(internal_name, ...) \
;     IOTEMPOWER_DEVICE_(Dev_Name, internal_name, ##__VA_ARGS__)
; #define dev01_(gcc_va_args...) dev_name_(gcc_va_args)
; #define dev02_(gcc_va_args...) dev_name_(gcc_va_args)
; #define dev_name(name, ...) IOTEMPOWER_DEVICE(name, dev_name_, ##__VA_ARGS__)
; #define dev01(gcc_va_args...) dev_name(gcc_va_args)
; #define dev02(gcc_va_args...) dev_name(gcc_va_args)
; // End: dev_name
;

[output]
aliases = out led relais
filename = output

[input]
aliases = button contact
filename = input

[edge_counter]
filename = edge_counter

[pwm]
filename = pwm
depends = servo

[servo]
filename = servo
class = Emp_Servo
depends = pwm
lib_esp32 = madhephaestus/ESP32Servo@^0.13.0

[servo_switch]
filename = servo_switch

[hcsr04]
aliases = ultra_sonic_distance
filename = distance-hcsr04

[vl53l0x]
aliases = tof_distance
filename = distance_vl53l0x

[hx711]
filename = emp_hx711
lib = bogde/HX711@^0.7.5

[analog]
filename = analog

[dht]
aliases = dht11
filename = th
lib = https://github.com/beegee-tokyo/DHTesp
depends = ds18b20

[dht22]
filename = th
lib = https://github.com/beegee-tokyo/DHTesp
depends = ds18b20

[ds18b20]
aliases = dallas
filename = th
lib = milesburton/DallasTemperature@^3.11.0 paulstoffregen/OneWire@^2.3.7
depends = dht

[bmp180]
aliases = bmp085
filename = barometer-bmp180
class = Barometer_BMP180
lib = seeed-studio/Grove Barometer Sensor@^2.1.0

[bmp280]
filename = barometer-bmp280
class = Barometer_BMP280
lib = seeed-studio/Grove - Barometer Sensor BMP280@^1.0.1

[i2c_socket]
filename = i2c_socket

[bh1750]
filename = lux_bh1750
class = Lux_BH1750
lib = claws/BH1750@^1.3.0

[ts2561]
filename = lux_tsl2561
lib = sparkfun/SparkFun TSL2561@^1.1.0

[rgb_single]
filename = rgb_single
depends = rgb_base rgb_strip pwm
class = RGB_Single

[rgb_base]
filename = rgb_base
code =
    /* only base class */

; FastLed based rgb strip
[rgb_strip]
filename = rgb_strip
class = RGB_Strip
depends = rgb_base
lib = fastled/FastLED@^3.6.0
code = 
    #define rgb_strip_(internal_name, mqtt_name_str, led_count, ...) \
        CRGB (internal_name ## leds)[led_count]; \
        IOTEMPOWER_DEVICE_(RGB_Strip, internal_name, mqtt_name_str, led_count, \
            FastLED.addLeds< __VA_ARGS__ >((internal_name ## leds), led_count))
    #define rgb_strip(name, ...) IOTEMPOWER_DEVICE(name, rgb_strip_, ##__VA_ARGS__)


; NeoPixelBus based rgb strip
[rgb_strip_bus]
filename = rgb_strip_bus
class = RGB_Strip_Bus
depends = rgb_strip
lib = makuna/NeoPixelBus@^2.7.6
extra_code = 
    #define F_RGB NeoRgbFeature
    #define F_GRB NeoGrbFeature
    #define F_BRG NeoBrgFeature
    #define F_RGBW NeoRgbwFeature
code =
    #define rgb_strip_bus_(internal_name, mqtt_name_str, led_count, color_feature, control_method, pin) \
        RGB_Strip_Bus_Template<color_feature, control_method> (internal_name ## leds)(led_count, pin); \
        IOTEMPOWER_DEVICE_(RGB_Strip_Bus, internal_name, mqtt_name_str, led_count, \
            (internal_name ## leds))
    #define rgb_strip_bus(name, ...) IOTEMPOWER_DEVICE(name, rgb_strip_bus_, ##__VA_ARGS__)


[rgb_matrix]
filename = rgb_matrix
depends = rgb_strip_bus rgb_strip

; after rgb because of WAIT macro overload
[gesture_apds9960]
filename = gesture-apds9960

[animator]
filename = animator

[display]
filename = display
depends = display44780
lib = olikraus/U8g2@^2.35.6

[display44780]
filename = display
depends = display
class = Display_HD44780_I2C
lib = tonykambo/LiquidCrystal_I2C

[gyro9250]
filename = gyro_mpu9250
class = Gyro_MPU9250
lib = https://github.com/iotempire/SparkFun_MPU-9250_Breakout_Arduino_Library

[gyro6050]
aliases = gyro
filename = gyro.h
class = Gyro_MPU6050

[mfrc522]
aliases = rfid
filename = mfrc522
lib = miguelbalboa/MFRC522@^1.4.10

[mpr121]
filename = mpr121
lib = adafruit/Adafruit MPR121@^1.1.1

[ir_receiver]
filename = ir_receiver
class = IRReceiver
lib = crankyoldgit/IRremoteESP8266@^2.8.6

[ir_sender]
filename = ir_sender
class = IRSender
lib = crankyoldgit/IRremoteESP8266@^2.8.6
